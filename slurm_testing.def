BootStrap: docker
From: rocker/ml-verse:latest

%post
    # Set up locales
    apt-get update && apt-get install -y locales
    locale-gen en_US.UTF-8
    echo "LANG=en_US.UTF-8" >> /etc/default/locale
    echo "LC_ALL=en_US.UTF-8" >> /etc/default/locale
    export LANG=en_US.UTF-8
    export LC_ALL=en_US.UTF-8


    # Basic utilities
    # Update system and install necessary dependencies
    apt-get update && apt-get install -y \
        software-properties-common \
        bash \
        coreutils \
        curl \
        gnupg \
        ca-certificates \
        cmake \
        libcurl4-openssl-dev \
        libxml2-dev \
        libssl-dev \
        libgdal-dev \
        libproj-dev \
        libgeos-dev \
        libnode-dev \
        libsodium-dev \
        libgit2-dev \
        libprotobuf-dev \
        protobuf-compiler \
        pkg-config \
        unzip \
        wget \
        git \
        libicu-dev \
        libblas-dev \
        liblapack-dev \
        gfortran \
        libreadline-dev \
        tzdata \
        libx11-dev \
        libxt-dev \
        libxmu-dev \
        libbz2-dev \
        libnng-dev \
        libfontconfig1-dev \
        libfreetype6-dev \
        libharfbuzz-dev \
        libfribidi-dev \
        slurm-client \
        lmod \
        libboost-dev \
        libboost-system-dev \
        libboost-filesystem-dev \
        libboost-chrono-dev \
        build-essential \
        libglpk-dev \
        libglpk40 \
        libgmp-dev \
        && rm -rf /var/lib/apt/lists/*

    apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y slurm-client munge && \
    apt-get clean && rm -rf /var/lib/apt/lists/*        


    # Set default library to /opt/Rlibs
    echo 'R_LIBS_USER=/opt/Rlibs' >> /etc/environment
    echo 'R_LIBS=/opt/Rlibs' >> /etc/environment
    echo 'R_LIBS_SITE=/opt/Rlibs' >> /etc/environment






    # Create directories
    mkdir /pipeline
    mkdir /input
    mkdir /opt/_targets
    mkdir /opt/Rlibs
    chmod -R 777 /opt/Rlibs

    export R_LIBS_USER=/opt/Rlibs
    export RENV_PATHS_LIBRARY=/opt/Rlibs

    # Pre-install some bootstrap packages so renv can resolve dependencies faster
    Rscript -e ".libPaths('/opt/Rlibs'); install.packages(c('renv','pak','devtools'), repos = 'https://cloud.r-project.org')"
    Rscript -e ".libPaths('/opt/Rlibs'); pak::pak('targets', upgrade = TRUE)"
    Rscript -e ".libPaths('/opt/Rlibs'); pak::pak('tarchetypes', upgrade = TRUE)"    
    Rscript -e ".libPaths('/opt/Rlibs'); pak::pak('crew', upgrade = TRUE)"    
    Rscript -e ".libPaths('/opt/Rlibs'); pak::pak('crew.cluster', upgrade = TRUE)"    
    Rscript -e ".libPaths('/opt/Rlibs'); pak::pak('mirai', upgrade = TRUE)"    
    Rscript -e ".libPaths('/opt/Rlibs'); pak::pak('nanonext', upgrade = TRUE)"        

    # Install R packages (mimicking rocker/ml-verse setup)
    Rscript -e ".libPaths('/opt/Rlibs'); install.packages(c('R6', 'data.table', 'jsonlite', 'knitr'), \
        repos = 'https://cran.r-project.org')"
    Rscript -e ".libPaths('/opt/Rlibs'); pak::pak('mitchellmanware/parsnip@beethoven')"
    Rscript -e ".libPaths('/opt/Rlibs'); install.packages(c('tarchetypes', 'sqltargets', \
        'testthat', 'tidymodels', 'bonsai', 'qs2', \
        'tidyverse', 'glmnet', 'covr', 'lightgbm'))"
    Rscript -e ".libPaths('/opt/Rlibs'); devtools::install_version('torch', version = '0.15.1')"
    Rscript -e ".libPaths('/opt/Rlibs'); options(timeout = 1800); torch::install_torch(version = 'latest', type = 'gpu')"
    Rscript -e ".libPaths('/opt/Rlibs'); pak::pak('tidymodels/brulee@gpu')"
    Rscript -e ".libPaths('/opt/Rlibs'); pak::pak('wlandau/autometric')"
    Rscript -e ".libPaths('/opt/Rlibs'); install.packages(c('scoringRules', 'future.mirai', 'vetiver', \
        'lwgeom', 'doRNG', 'quarto', 'kernlab', 'arrow', 'h3r'))"
    Rscript -e ".libPaths('/opt/Rlibs'); pak::pak('finetune')"
    Rscript -e ".libPaths('/opt/Rlibs'); pak::pak('lme4',upgrade = TRUE)"
    Rscript -e ".libPaths('/opt/Rlibs'); remotes::install_github('crazycapivara/h3-r')"
    Rscript -e ".libPaths('/opt/Rlibs'); pak::pak('ropensci/chopin')"
    Rscript -e ".libPaths('/opt/Rlibs'); pak::pak('NIEHS/amadeus')"
    Rscript -e ".libPaths('/opt/Rlibs'); pak::pak('NIEHS/beethoven')"
    Rscript -e ".libPaths('/opt/Rlibs'); pak::pak('r-lib/ps', upgrade = TRUE)"    
    Rscript -e ".libPaths('/opt/Rlibs'); pak::pak('tidymodels', upgrade = TRUE)"    

%environment
    export LANG=en_US.UTF-8
    export LC_ALL=en_US.UTF-8
    export TERM=xterm-256color
    SHELL=/bin/bash
    LANG=en_US.UTF-8
    OMP_NUM_THREADS=1
    OPENBLAS_NUM_THREADS=1
    export SHELL LANG OMP_NUM_THREADS OPENBLAS_NUM_THREADS 

    # Optionally preconfigure R
    export R_HOME=/usr/lib/R
    export R_LIBS_USER=/opt/Rlibs    


%labels
    Project: slurm_testing

%runscript
    #!/bin/bash
    set -euo pipefail

    trap 'echo "Received SIGTERM, cleaning up"; exit 0' SIGTERM SIGINT SIGHUP SIGPIPE

    echo "Container started"
    "$@"


